// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rezeptmanager.RezeptDB;

#nullable disable

namespace Rezeptmanager.Migrations
{
    [DbContext(typeof(RezeptDbContext))]
    partial class RezeptDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rezeptmanager.Entities.Rezept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dauer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchwierigkeitsGrad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rezepte");
                });

            modelBuilder.Entity("Rezeptmanager.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Rezeptmanager.Entities.Zutat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RezeptId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RezeptId");

                    b.ToTable("Zutat");
                });

            modelBuilder.Entity("Rezeptmanager.Entities.Zutat", b =>
                {
                    b.HasOne("Rezeptmanager.Entities.Rezept", null)
                        .WithMany("Zutaten")
                        .HasForeignKey("RezeptId");
                });

            modelBuilder.Entity("Rezeptmanager.Entities.Rezept", b =>
                {
                    b.Navigation("Zutaten");
                });
#pragma warning restore 612, 618
        }
    }
}
